import Head from "next/head";
import Image from "next/image";
import css from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import Axios from "Axios";

export default function Home() {
    const [friendAge, setFriendAge] = useState(0);
    const [friendName, setFriendName] = useState("");
    const [listFriend, setListFriend] = useState([]);

    useEffect(() => {
        // READ DATA
        Axios.get("http://localhost:3001/read")
            .then((response) => {
                setListFriend(response.data);
            })
            .catch((error) => {
                console.log(error);
            });
    }, []);

    // ADD
    const addFriend = async () => {
        Axios.post("http://localhost:3001/addFriend", {
            name: friendName,
            age: friendAge,
        }).then((response) => {
            setListFriend([
                ...listFriend,
                { _id: response.data._id, name: friendName, age: friendAge },
            ]);
        });

        setFriendAge("");
        setFriendName("");
    };

    // UPDATE
    const updateAge = (id) => {
        // prompt ouvre une fenetre pour entrer une nouvelle info
        const newAge = prompt("Enter new age : ");

        Axios.put("http://localhost:3001/update", {
            newAge: newAge,
            id: id,
        }).then(() => {
            setListFriend(
                listFriend.map((val) =>
                    val._id === id
                        ? { _id: id, name: val.name, age: newAge }
                        : val
                )
            );
        });
    };

    // DELETE

    const handleDelete = (id) => {
        Axios.delete(`http://localhost:3001/delete/${id}`).then(() => {
            setListFriend(listFriend.filter((val) => val._id !== id));
        });
    };

    return (
        <div className={css.global_container}>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className={css.inputs}>
                <input
                    onChange={(e) => {
                        setFriendName(e.target.value);
                    }}
                    placeholder="Friend Name"
                    className={css.input}
                    type="text"
                    value={friendName}
                />
                <input
                    onChange={(e) => {
                        setFriendAge(e.target.value);
                    }}
                    placeholder="Friend Age"
                    className={css.input}
                    type="number"
                    value={friendAge}
                />
                <button onClick={addFriend} className={css.submitButton}>
                    Add friend
                </button>
            </div>

            <div>
                {listFriend.map((value, index) => (
                    <div className={css.friend_card} key={index}>
                        <h1>{value.name}</h1>
                        <p>{value.age} !</p>
                        <button
                            onClick={() => updateAge(value._id)}
                            className={css.submitButton}
                        >
                            {" "}
                            Update Age
                        </button>

                        <button onClick={() => handleDelete(value._id)}>
                            Delete
                        </button>
                    </div>
                ))}
            </div>
        </div>
    );
}
